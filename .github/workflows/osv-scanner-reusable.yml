# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Performs a vulnerability scan with OSV-Scanner and reports the result.
name: OSV-Scanner single vulnerability scan

permissions:
  # Required to upload SARIF file to CodeQL. See: https://github.com/github/codeql-action/issues/2117
  actions: read
  contents: read
  security-events: write

on:
  workflow_call:
    inputs:
      scan-args:
        description: "Custom osv-scanner arguments (See https://google.github.io/osv-scanner/usage/ for options, you cannot set --format or --output)"
        type: string
        default: |-
          -r
          --skip-git
          ./
      results-file-name:
        description: "File name of the result SARIF file"
        type: string
        default: results.sarif
      download-artifact:
        description: "Optional artifact to download for scanning"
        required: false
        default: ""
        type: string
      upload-sarif:
        description: "Whether to upload to Security > Code Scanning"
        type: boolean
        required: false
        default: true
      fail-on-vuln:
        description: "Whether to fail the action on vulnerability found"
        type: boolean
        default: true

jobs:
  osv-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          persist-credentials: false
      - name: "Download custom artifact if specified"
        uses: actions/download-artifact@v4
        if: "${{ inputs.download-artifact != '' }}"
        with:
          name: "${{ inputs.download-artifact }}"
          path: "./"
      - name: "Run scanner"
        uses: google/osv-scanner-action/osv-scanner-action@c8774f9a566b87da6d60dc699730b268382bcd4e # v1.8.5
        with:
          scan-args: |-
            --output=results.json
            --format=json
            ${{ inputs.scan-args }}
        continue-on-error: true
      - name: "Run osv-scanner-reporter"
        uses: google/osv-scanner-action/osv-reporter-action@c8774f9a566b87da6d60dc699730b268382bcd4e # v1.8.5
        with:
          scan-args: |-
            --output=${{ inputs.results-file-name }}
            --new=results.json
            --gh-annotations=false
            --fail-on-vuln=${{ inputs.fail-on-vuln }}
      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      - name: "Upload artifact"
        id: "upload_artifact"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: SARIF file
          path: ${{ inputs.results-file-name }}
          retention-days: 5
      # Upload the results to GitHub's code scanning dashboard.
      - name: "Upload to code-scanning"
        if: "${{ !cancelled() && inputs.upload-sarif == true }}"
        uses: github/codeql-action/upload-sarif@e2b3eafc8d227b0241d48be5f425d47c2d750a13 # v3.26.10
        with:
          sarif_file: ${{ inputs.results-file-name }}
      - name: "Error troubleshooter"
        if: ${{ always() && steps.upload_artifact.outcome == 'failure' }}
        run: |
          echo "::error::Artifact upload failed. This is most likely caused by a error during scanning earlier in the workflow."
          exit 1
